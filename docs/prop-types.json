{
  "MobileWrapper": {
    "okLabel": {
      "defaultValue": {
        "value": "OK"
      },
      "description": "\"OK\" label message",
      "name": "okLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "cancelLabel": {
      "defaultValue": {
        "value": "Cancel"
      },
      "description": "\"CANCEL\" label message",
      "name": "cancelLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "clearLabel": {
      "defaultValue": {
        "value": "Clear"
      },
      "description": "\"CLEAR\" label message",
      "name": "clearLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "todayLabel": {
      "defaultValue": {
        "value": "Today"
      },
      "description": "\"TODAY\" label message",
      "name": "todayLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "showTodayButton": {
      "defaultValue": {
        "value": false
      },
      "description": "If true today button will be displayed. **Note** that clear button has higher priority",
      "name": "showTodayButton",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "clearable": {
      "defaultValue": {
        "value": false
      },
      "description": "Show clear action in picker dialog",
      "name": "clearable",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "DialogProps": {
      "defaultValue": null,
      "description": "Props to be passed directly to material-ui Dialog",
      "name": "DialogProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<MuiDialogProps>"
      }
    },
    "PopoverProps": {
      "defaultValue": null,
      "description": "Popover props passed to material-ui Popover",
      "name": "PopoverProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/DesktopWrapper.tsx",
        "name": "InnerDesktopWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<PopoverProps>"
      }
    },
    "displayStaticWrapperAs": {
      "defaultValue": {
        "value": "\"static\""
      },
      "description": "Force static wrapper inner components to be rendered in mobile or desktop mode",
      "name": "displayStaticWrapperAs",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/StaticWrapper.tsx",
        "name": "StaticWrapperProps"
      },
      "required": false,
      "type": {
        "name": "\"desktop\" | \"mobile\" | \"static\""
      }
    }
  },
  "DesktopWrapper": {
    "PopoverProps": {
      "defaultValue": null,
      "description": "Popover props passed to material-ui Popover",
      "name": "PopoverProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/DesktopWrapper.tsx",
        "name": "InnerDesktopWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<PopoverProps>"
      }
    },
    "okLabel": {
      "defaultValue": {
        "value": "\"OK\""
      },
      "description": "\"OK\" label message",
      "name": "okLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "cancelLabel": {
      "defaultValue": {
        "value": "\"CANCEL\""
      },
      "description": "\"CANCEL\" label message",
      "name": "cancelLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "clearLabel": {
      "defaultValue": {
        "value": "\"CLEAR\""
      },
      "description": "\"CLEAR\" label message",
      "name": "clearLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "todayLabel": {
      "defaultValue": {
        "value": "\"TODAY\""
      },
      "description": "\"TODAY\" label message",
      "name": "todayLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "showTodayButton": {
      "defaultValue": {
        "value": "false"
      },
      "description": "If true today button will be displayed. **Note** that clear button has higher priority",
      "name": "showTodayButton",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "clearable": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Show clear action in picker dialog",
      "name": "clearable",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "DialogProps": {
      "defaultValue": null,
      "description": "Props to be passed directly to material-ui Dialog",
      "name": "DialogProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<MuiDialogProps>"
      }
    },
    "PopperProps": {
      "defaultValue": null,
      "description": "Popper props passed to material-ui [Popper](https://material-ui.com/api/popper/#popper-api)",
      "name": "PopperProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/DesktopPopperWrapper.tsx",
        "name": "InnerDesktopPopperWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<PopperProps>"
      }
    },
    "TransitionComponent": {
      "defaultValue": null,
      "description": "Custom component for [transition](https://material-ui.com/components/transitions/#transitioncomponent-prop)",
      "name": "TransitionComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/DesktopPopperWrapper.tsx",
        "name": "InnerDesktopPopperWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<TransitionProps, any> | FunctionComponent<TransitionProps>"
      }
    },
    "displayStaticWrapperAs": {
      "defaultValue": {
        "value": "\"static\""
      },
      "description": "Force static wrapper inner components to be rendered in mobile or desktop mode",
      "name": "displayStaticWrapperAs",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/StaticWrapper.tsx",
        "name": "StaticWrapperProps"
      },
      "required": false,
      "type": {
        "name": "\"desktop\" | \"mobile\" | \"static\""
      }
    }
  },
  "Calendar": {
    "minDate": {
      "defaultValue": null,
      "description": "Min selectable date",
      "name": "minDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "CalendarProps"
      },
      "required": true,
      "type": {
        "name": "any"
      }
    },
    "maxDate": {
      "defaultValue": null,
      "description": "Max selectable date",
      "name": "maxDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "CalendarProps"
      },
      "required": true,
      "type": {
        "name": "any"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "Calendar onChange",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": true,
      "type": {
        "name": "PickerOnChangeFn"
      }
    },
    "renderDay": {
      "defaultValue": null,
      "description": "Custom renderer for day. Check [DayComponentProps api](https://material-ui-pickers.dev/api/Day)",
      "name": "renderDay",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "(day: DateIOType, selectedDates: DateIOType[], DayComponentProps: DayProps) => Element"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": {
        "value": "currentWrapper !== 'static'"
      },
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "loadingIndicator": {
      "defaultValue": null,
      "description": "Custom loading indicator",
      "name": "loadingIndicator",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "Element"
      }
    },
    "disableHighlightToday": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable highlighting today date with a circle",
      "name": "disableHighlightToday",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "showDaysOutsideCurrentMonth": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display disabled dates outside the current month",
      "name": "showDaysOutsideCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "shouldDisableDate": {
      "defaultValue": null,
      "description": "Disable specific date",
      "name": "shouldDisableDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/date-utils.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "(day: DateIOType) => boolean"
      }
    },
    "disablePast": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable past dates",
      "name": "disablePast",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/date-utils.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableFuture": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable future dates",
      "name": "disableFuture",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/date-utils.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    }
  },
  "Day": {
    "day": {
      "defaultValue": null,
      "description": "The date to show",
      "name": "day",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": true,
      "type": {
        "name": "any"
      }
    },
    "focused": {
      "defaultValue": {
        "value": false
      },
      "description": "Is focused by keyboard navigation",
      "name": "focused",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "focusable": {
      "defaultValue": {
        "value": false
      },
      "description": "Can be focused by tabbing in",
      "name": "focusable",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "inCurrentMonth": {
      "defaultValue": null,
      "description": "Is day in current month",
      "name": "inCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": true,
      "type": {
        "name": "boolean"
      }
    },
    "isAnimating": {
      "defaultValue": null,
      "description": "Is switching month animation going on right now",
      "name": "isAnimating",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "today": {
      "defaultValue": {
        "value": false
      },
      "description": "Is today?",
      "name": "today",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disabled": {
      "defaultValue": {
        "value": false
      },
      "description": "Disabled?",
      "name": "disabled",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "selected": {
      "defaultValue": {
        "value": false
      },
      "description": "Selected?",
      "name": "selected",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": null,
      "description": "Is keyboard control and focus management enabled",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableMargin": {
      "defaultValue": {
        "value": false
      },
      "description": "Disable margin between days, useful for displaying range of days",
      "name": "disableMargin",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "showDaysOutsideCurrentMonth": {
      "defaultValue": {
        "value": false
      },
      "description": "Display disabled dates outside the current month",
      "name": "showDaysOutsideCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableHighlightToday": {
      "defaultValue": {
        "value": false
      },
      "description": "Disable highlighting today date with a circle",
      "name": "disableHighlightToday",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    }
  },
  "ClockView": {
    "date": {
      "defaultValue": null,
      "description": "Selected date",
      "name": "date",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "DateIOType"
      }
    },
    "type": {
      "defaultValue": null,
      "description": "Clock type",
      "name": "type",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "\"hours\" | \"minutes\" | \"seconds\""
      }
    },
    "onDateChange": {
      "defaultValue": null,
      "description": "On change date without moving between views",
      "name": "onDateChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "PickerOnChangeFn"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "On change callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "PickerOnChangeFn"
      }
    },
    "getHoursClockNumberText": {
      "defaultValue": {
        "value": null
      },
      "description": "Get clock number aria-text for hours",
      "name": "getHoursClockNumberText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(hoursText: string) => string"
      }
    },
    "getMinutesClockNumberText": {
      "defaultValue": {
        "value": null
      },
      "description": "Get clock number aria-text for minutes",
      "name": "getMinutesClockNumberText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(minutesText: string) => string"
      }
    },
    "getSecondsClockNumberText": {
      "defaultValue": {
        "value": null
      },
      "description": "Get clock number aria-text for seconds",
      "name": "getSecondsClockNumberText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(secondsText: string) => string"
      }
    },
    "ampm": {
      "defaultValue": {
        "value": "true"
      },
      "description": "12h/24h view for hour selection clock",
      "name": "ampm",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minutesStep": {
      "defaultValue": {
        "value": 1
      },
      "description": "Step over minutes",
      "name": "minutesStep",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "ampmInClock": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display ampm controls under the clock (instead of in the toolbar)",
      "name": "ampmInClock",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": {
        "value": "currentWrapper !== 'static'"
      },
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minTime": {
      "defaultValue": null,
      "description": "Min time, date part by default, will be ignored",
      "name": "minTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/time-utils.ts",
        "name": "TimeValidationProps"
      },
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "maxTime": {
      "defaultValue": null,
      "description": "Max time, date part by default, will be ignored",
      "name": "maxTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/time-utils.ts",
        "name": "TimeValidationProps"
      },
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "shouldDisableTime": {
      "defaultValue": null,
      "description": "Dynamically check if time is disabled or not",
      "name": "shouldDisableTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/time-utils.ts",
        "name": "TimeValidationProps"
      },
      "required": false,
      "type": {
        "name": "(timeValue: number, clockType: \"hours\" | \"minutes\" | \"seconds\") => boolean"
      }
    },
    "disableTimeValidationIgnoreDatePart": {
      "defaultValue": null,
      "description": "Do not ignore date part when validating min/max time",
      "name": "disableTimeValidationIgnoreDatePart",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/time-utils.ts",
        "name": "TimeValidationProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "leftArrowIcon": {
      "defaultValue": null,
      "description": "Left arrow icon",
      "name": "leftArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "rightArrowIcon": {
      "defaultValue": null,
      "description": "Right arrow icon",
      "name": "rightArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "leftArrowButtonText": {
      "defaultValue": {
        "value": "open previous view"
      },
      "description": "Left arrow icon aria-label text",
      "name": "leftArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "rightArrowButtonText": {
      "defaultValue": {
        "value": "open next view"
      },
      "description": "Right arrow icon aria-label text",
      "name": "rightArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "leftArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to left arrow button",
      "name": "leftArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "rightArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to right arrow button",
      "name": "rightArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    }
  }
}